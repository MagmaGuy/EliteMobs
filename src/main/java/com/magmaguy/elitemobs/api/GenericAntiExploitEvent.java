package com.magmaguy.elitemobs.api;

import com.magmaguy.elitemobs.mobconstructor.EliteMobEntity;
import org.bukkit.Location;
import org.bukkit.Material;
import org.bukkit.block.Block;
import org.bukkit.entity.Entity;
import org.bukkit.event.Cancellable;
import org.bukkit.event.Event;
import org.bukkit.event.HandlerList;
import org.bukkit.event.entity.EntityDamageEvent;
import org.bukkit.util.Vector;

public class GenericAntiExploitEvent extends Event implements Cancellable {

    private static final HandlerList handlers = new HandlerList();
    private Entity entity;
    private EliteMobEntity eliteMobEntity;
    private boolean isCancelled = false;
    private boolean isTriggered = false;
    private EntityDamageEvent entityDamageEvent;
    public Block
            block000, block001, block002,
            block010, block011, block012,
            block020, block021, block022,
            block030, block031, block032,
            block100, blockBelow, block102,
            block110, ground, block112,
            block120, headMaterial, block122,
            block130, ceilingMaterial, block132,
            block200, block201, block202,
            block210, block211, block212,
            block220, block221, block222,
            block230, block231, block232;

    public GenericAntiExploitEvent(EliteMobEntity eliteMobEntity, EntityDamageEvent event) {
        this.entity = eliteMobEntity.getLivingEntity();
        this.eliteMobEntity = eliteMobEntity;
        this.entityDamageEvent = event;
        this.isCancelled = event.isCancelled();
        if (event.isCancelled()) return;
        if (!eliteMobEntity.getLivingEntity().hasAI())
            setCancelled(true);
        block000 = defineMaterial(new Vector(-1, -1, -1));
        block001 = defineMaterial(new Vector(-1, -1, 0));
        block002 = defineMaterial(new Vector(-1, -1, 1));
        block010 = defineMaterial(new Vector(-1, 0, -1));
        block011 = defineMaterial(new Vector(-1, 0, 0));
        block012 = defineMaterial(new Vector(-1, 0, 1));
        block020 = defineMaterial(new Vector(-1, 1, -1));
        block021 = defineMaterial(new Vector(-1, 1, 0));
        block022 = defineMaterial(new Vector(-1, 1, 1));
        block030 = defineMaterial(new Vector(-1, 2, -1));
        block031 = defineMaterial(new Vector(-1, 2, 0));
        block032 = defineMaterial(new Vector(-1, 2, 1));
        block100 = defineMaterial(new Vector(0, -1, -1));
        //mob floor location
        blockBelow = defineMaterial(new Vector(0, -1, 0));
        block102 = defineMaterial(new Vector(0, -1, 1));
        block110 = defineMaterial(new Vector(0, 0, -1));
        //mob ground location
        ground = defineMaterial(new Vector(0, 0, 0));
        block112 = defineMaterial(new Vector(0, 0, 1));
        block120 = defineMaterial(new Vector(0, 1, -1));
        //mob head location
        headMaterial = defineMaterial(new Vector(0, 1, 0));
        block122 = defineMaterial(new Vector(0, 1, 1));
        block130 = defineMaterial(new Vector(0, 2, -1));
        //ceiling block
        ceilingMaterial = defineMaterial(new Vector(0, 2, 0));
        block132 = defineMaterial(new Vector(0, 2, 1));
        block200 = defineMaterial(new Vector(1, -1, -1));
        block201 = defineMaterial(new Vector(1, -1, 0));
        block202 = defineMaterial(new Vector(1, -1, 1));
        block210 = defineMaterial(new Vector(1, 0, -1));
        block211 = defineMaterial(new Vector(1, 0, 0));
        block212 = defineMaterial(new Vector(1, 0, 1));
        block220 = defineMaterial(new Vector(1, 1, -1));
        block221 = defineMaterial(new Vector(1, 1, 0));
        block222 = defineMaterial(new Vector(1, 1, 1));
        block230 = defineMaterial(new Vector(1, 2, -1));
        block231 = defineMaterial(new Vector(1, 2, 0));
        block232 = defineMaterial(new Vector(1, 2, 1));

    }

    private Block defineMaterial(Vector offset) {
        Location clonedLocation = entity.getLocation().getBlock().getLocation().add(new Vector(0.5, 0.5, 0.5)).clone();
        //Location templocation = clonedLocation.clone().add(offset);
        //new DebugBlockLocation(templocation);
        return clonedLocation.add(offset).getBlock();
    }

    public Entity getEntity() {
        return entity;
    }

    public EliteMobEntity getEliteMobEntity() {
        return eliteMobEntity;
    }

    public EntityDamageEvent getEntityDamageEvent() {
        return entityDamageEvent;
    }

    @Override
    public HandlerList getHandlers() {
        return handlers;
    }

    public static HandlerList getHandlerList() {
        return handlers;
    }

    @Override
    public boolean isCancelled() {
        return this.isCancelled;
    }

    @Override
    public void setCancelled(boolean b) {
        this.isCancelled = b;
    }

    public void setTriggered(boolean triggered) {
        isTriggered = triggered;
    }

    public boolean isTriggered() {
        return isTriggered;
    }

}
